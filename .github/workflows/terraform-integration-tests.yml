name: integration-tests
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'pom.xml'
      - '.github/terraform/**'

jobs:
  build:
    defaults:
      run:
        shell: bash
    env:
      GCP_KEY_FILE: ${{ secrets.GCP_KEY_FILE }}
      SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8' ]
        architecture: [ 'x64' ]
    steps:
      # SET UP JDK
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.architecture }}

      - run: java -version

      - run: mvn --version

      - run : mkdir ~/lib

      # BUILD HAZELCAST GCP SNAPSHOT
      - uses: actions/checkout@v3.0.2
        with:
          path: hazelcast-gcp

      - name: Build hazelcast-gcp jar
        run: |
          cd hazelcast-gcp
          mvn clean install -DskipTests
          echo "Hazelcast GCP jar is: " target/hazelcast-gcp-*-SNAPSHOT.jar
          cp target/hazelcast-gcp-*-SNAPSHOT.jar ~/lib/hazelcast-gcp.jar

      # DOWNLOAD HAZELCAST JAR WITH VERSION DEFINED IN POM.XML
      - name: Download latest Hazelcast version
        run: |
          HZ_VERSION=$(cat hazelcast-gcp/pom.xml | grep -m 1 -Po "<hazelcast.version>\K[-_.a-zA-Z0-9]+(?=</hazelcast.version)")
          if [[ $hz_version == *"SNAPSHOT"* ]]; then
            export HZ_JAR_REPO_URL="https://oss.sonatype.org/content/repositories/snapshots"
          else
            export HZ_JAR_REPO_URL="https://repo1.maven.org/maven2"
          fi
          mvn dependency:get -DgroupId=com.hazelcast -DartifactId=hazelcast -Dversion=${HZ_VERSION} \
                  -Dpackaging=jar -DremoteRepositories=${HZ_JAR_REPO_URL}
          cp ~/.m2/repository/com/hazelcast/hazelcast/${HZ_VERSION}/hazelcast-${HZ_VERSION}.jar ~/lib/hazelcast.jar

      #BUILD TERRAFORM
      - name : Set-up Terraform
        uses: hashicorp/setup-terraform@v1.3.2
        with:
          terraform_version: 0.13.0

      - name: Create unique prefix for resources
        run: |
          sed -i -e "s/SET_PREFIX/\"${GITHUB_WORKFLOW}-${GITHUB_RUN_ID}\"/g" hazelcast-gcp/.github/terraform/terraform.tfvars

      - name: Add project ID terraform.tfvars
        run: |
          project_id=$(echo $GCP_KEY_FILE | grep -Po '"project_id":\s"\K[-a-zA-Z0-9]+')
          sed -i -e "s~SET_PROJECT_ID~\"${project_id}\"~g"  hazelcast-gcp/.github/terraform/terraform.tfvars

      - name: Create GCP credentials file
        run: |
          touch hazelcast-gcp/.github/terraform/gcp_key_file.json
          echo $GCP_KEY_FILE > hazelcast-gcp/.github/terraform/gcp_key_file.json

      - name: Terraform Init
        run: cd hazelcast-gcp/.github/terraform && terraform init

      - name: Terraform Format
        run: cd hazelcast-gcp/.github/terraform  && terraform fmt

      - name: Install private key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: " "

      - name: Install public key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PUBLIC_KEY }}
          name: id_rsa.pub
          known_hosts: " "

      - name: Terraform Apply
        run: |
          cd hazelcast-gcp/.github/terraform  && terraform apply -auto-approve

      - name: Terraform Destroy
        if: ${{ always() }}
        run: |
          cd hazelcast-gcp/.github/terraform  && terraform destroy -auto-approve
